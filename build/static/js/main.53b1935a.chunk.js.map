{"version":3,"sources":["components/Navbar/Navbar.tsx","services/Estabelecimentos.ts","components/Card/Card.tsx","components/Carousel/Carousel.tsx","services/Favoritos.ts","components/CardEstabelecimento/CardEstabelecimento.tsx","scenes/Home/Home.tsx","components/Sidebar/Sidebar.tsx","scenes/Favorites/Favorites.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["className","href","to","getEstabelecimentos","callback","id","nome","tipo","telefone","whatsapp","facebook","instagram","endereco","fotos","title","subtitle","children","images","indicators","map","image","index","data-target","data-slide-to","items","src","data-ride","role","data-slide","aria-hidden","getFavoritos","JSON","parse","localStorage","getItem","estabelecimento","favorite","useState","isFavorite","setFavorite","saveFavorito","result","favoritos","indexOf","splice","firebase","analytics","logEvent","add","push","setItem","stringify","Card","Carousel","style","target","onClick","estabelecimentos","setEstabelecimentos","favorites","setFavorites","useEffect","filter","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","signInAnonymously","catch","err","console","error","onAuthStateChanged","user","isAnonymous","uid","Navbar","Sidebar","path","exact","Home","Favorites","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.53b1935a.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nexport default () => (\n    <nav className=\"navbar\">\n        <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n                <a href=\"javascript:void(0);\" className=\"bars\"></a>\n                <Link className=\"navbar-brand\" to=\"/\">DDELIVERY</Link>\n            </div>\n        </div>\n    </nav>\n)","import { Estabelecimento } from \"../interfaces/Estabelecimento\"\n\nexport const getEstabelecimentos = (callback: Function) => {\n    callback([{\n        id: 1,\n        nome: \"Estab. 1\",\n        tipo: \"Sorveteria\",\n        telefone: \"5519999999999\",\n        whatsapp: \"5519999999999\",\n        facebook: \"https://google.com\",\n        instagram: \"https://google.com\",\n        endereco: \"Rua 1, 1234 - Bairro a. Cidade - SP\",\n        fotos: [\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\"\n        ]\n    },{\n        id: 2,\n        nome: \"Estab. 2\",\n        tipo: \"Padaria\",\n        telefone: \"5519999999999\",\n        whatsapp: \"5519999999999\",\n        facebook: \"https://google.com\",\n        instagram: \"https://google.com\",\n        endereco: \"Rua 1, 1234 - Bairro a. Cidade - SP\",\n        fotos: [\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\"\n        ]\n    },{\n        id: 3,\n        nome: \"Estab. 3\",\n        tipo: \"Lanchonete\",\n        telefone: \"5519999999999\",\n        whatsapp: \"5519999999999\",\n        facebook: \"https://google.com\",\n        instagram: \"https://google.com\",\n        endereco: \"Rua 1, 1234 - Bairro a. Cidade - SP\",\n        fotos: [\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\",\n          \"https://tecnoblog.net/wp-content/uploads/2020/08/kali-linux-windows-10.jpg\"\n        ]\n    }] as Array<Estabelecimento>)\n}","import React from 'react'\n\ninterface CardProps {\n    title: string,\n    subtitle?: string,\n    children: React.ReactNode\n}\n\nexport default ({title, subtitle, children}: CardProps) => (\n    <div className=\"card\">\n        <div className=\"header bg-blue\">\n            <h2>\n                {title}\n                <small>{subtitle}</small>\n            </h2>\n        </div>\n        {children}\n    </div>\n)","import React from 'react';\n\ninterface CarouselProps {\n    id: string,\n    images: Array<string>\n}\n\nexport default ({ id, images }: CarouselProps) => {\n\n    const indicators = images.map((image: string, index: number) => {\n        return <li data-target={`#${id}`} data-slide-to={index} className={index == 0 ? 'active' : ''}></li>\n    });\n\n\n    const items = images.map((image: string, index: number) => {\n        return <div className={`item ${index == 0 ? 'active' : ''}`}>\n            <img src={image} />\n        </div>\n    })\n\n\n    return <div id={id} className=\"carousel slide\" data-ride=\"carousel\" >\n        <ol className=\"carousel-indicators\">\n            {indicators}\n        </ol>\n\n        <div className=\"carousel-inner\" role=\"listbox\">\n            {items}\n        </div>\n\n        <a className=\"left carousel-control\" href={`#${id}`} role=\"button\" data-slide=\"prev\">\n            <span className=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\n            <span className=\"sr-only\">Previous</span>\n        </a>\n        <a className=\"right carousel-control\" href={`#${id}`} role=\"button\" data-slide=\"next\">\n            <span className=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\n            <span className=\"sr-only\">Next</span>\n        </a>\n    </div>\n}","\nexport const getFavoritos = (callback: Function) => {\n    callback(JSON.parse(localStorage.getItem('favorite') || \"[]\"));\n}\n\nexport const setFavoritos = (favoritos: Array<number>, callback?: Function) => {\n    localStorage.setItem('favorite', JSON.stringify(favoritos));\n}","import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport Card from '../Card/Card';\nimport { Estabelecimento } from '../../interfaces/Estabelecimento';\nimport Carousel from '../Carousel/Carousel';\nimport { Link } from 'react-router-dom';\n\nimport './CardEstabelecimento.css'\nimport { getFavoritos, setFavoritos } from '../../services/Favoritos';\n\ninterface CardEstabelecimentoProps {\n    estabelecimento: Estabelecimento;\n    favorite: boolean;\n}\n\nexport default ({ estabelecimento, favorite }: CardEstabelecimentoProps) => {\n    const [isFavorite, setFavorite] = useState(favorite)\n\n    const saveFavorito = () => {\n        getFavoritos((result: Array<number>) => {\n            const index = result.indexOf(estabelecimento.id);\n            if (index > -1) {\n                result.splice(index, 1);\n                setFavorite(false);\n                firebase.analytics().logEvent('removeFavorite', {add: false, estabelecimento: estabelecimento});\n            } else {\n                result.push(estabelecimento.id);\n                setFavorite(true);\n                firebase.analytics().logEvent('addFavorite', {add: true, estabelecimento: estabelecimento});\n            }\n\n            setFavoritos(result);\n        })\n    }\n\n    return <Card\n        title={estabelecimento.nome}\n        subtitle={estabelecimento.endereco}\n    >\n        <Carousel\n            id={`carousel-${estabelecimento.id}`}\n            images={estabelecimento.fotos}\n        />\n        <div style={{ 'padding': '16px' }}>\n            <div className='row'>\n                <div className='col-xs-2'>\n                    <a className='waves-blue' target='blank' href={`tel:${estabelecimento.telefone}`} >\n                        <i className='text-gray fa fa-2x fa-phone'></i>\n                    </a>\n                </div>\n                <div className='col-xs-2'>\n                    <a target='blank' href={`https://api.whatsapp.com/send?phone=${estabelecimento.whatsapp}&text=Olá,%20encontrei%20seu%20estabelecimento%20no%20app%20*Meu%20Delivery*.`}>\n                        <i className='text-gray font-bold fa fa-2x fa-whatsapp'></i>\n                    </a>\n                </div>\n                <div className='col-xs-2'>\n                    <a target='blank' href={estabelecimento.facebook}>\n                        <i className='text-gray font-bold fa fa-2x fa-facebook-official'></i>\n                    </a>\n                </div>\n                <div className='col-xs-2'>\n                    <a target='blank' href={estabelecimento.instagram}>\n                        <i className='text-gray font-bold fa fa-2x fa-instagram'></i>\n                    </a>\n                </div>\n                <div className='col-xs-2'>\n                    <i onClick={() => saveFavorito() } className={`text-gray font-bold fa fa-2x ${isFavorite ? 'fa-heart' : 'fa-heart-o'}`}></i>\n                </div>\n                <div className='col-xs-2'>\n                    <Link to={`produtos/${estabelecimento.id}`}>\n                        <i className='text-gray font-bold fa fa-2x fa-cart-plus'></i>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    </Card>\n}","import React, { useEffect, useState } from 'react'\nimport { getEstabelecimentos } from '../../services/Estabelecimentos';\nimport { Estabelecimento } from '../../interfaces/Estabelecimento';\nimport Card from '../../components/Card/Card';\nimport Carousel from '../../components/Carousel/Carousel';\nimport CardEstabelecimento from '../../components/CardEstabelecimento/CardEstabelecimento';\nimport { getFavoritos } from '../../services/Favoritos';\n\nexport default () => {\n    const [estabelecimentos, setEstabelecimentos] = useState<Array<Estabelecimento>>([]);\n    const [favorites, setFavorites] = useState<Array<number>>([]);\n\n    useEffect(() => {\n        getEstabelecimentos((result: Array<Estabelecimento>) => setEstabelecimentos(result))\n        getFavoritos((result: Array<number>) => setFavorites(result))\n    }, [])\n\n    return <div>\n        {estabelecimentos.map(estabelecimento => <div className='col-xs-12 col-md-3'>\n            <CardEstabelecimento estabelecimento={estabelecimento} favorite={favorites.indexOf(estabelecimento.id) > -1} />\n        </div>\n        )}\n    </div>\n}","import React from 'react';\n\nimport {Link} from 'react-router-dom';\n\nexport default () => (\n    <section>\n        <aside id=\"leftsidebar\" className=\"sidebar\">\n            <div className=\"menu\">\n                <ul className=\"list\">\n                    <li className=\"header\">MAIN NAVIGATION</li>\n                    <li>\n                        <Link to=\"/\">\n                            <i className=\"material-icons\">home</i>\n                            <span>Início</span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"favoritos\">\n                            <i className=\"material-icons\">favorite</i>\n                            <span>Favoritos</span>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"indicar\">\n                            <i className=\"material-icons\">thumb_up</i>\n                            <span>Indicar Estabelecimento</span>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </aside>\n    </section>\n)","import React, { useEffect, useState } from 'react'\nimport { getEstabelecimentos } from '../../services/Estabelecimentos';\nimport { Estabelecimento } from '../../interfaces/Estabelecimento';\nimport CardEstabelecimento from '../../components/CardEstabelecimento/CardEstabelecimento';\nimport { getFavoritos } from '../../services/Favoritos';\n\nexport default () => {\n    const [estabelecimentos, setEstabelecimentos] = useState<Array<Estabelecimento>>([]);\n    const [favorites, setFavorites] = useState<Array<number>>([]);\n\n    useEffect(() => {\n        getEstabelecimentos((result: Array<Estabelecimento>) => setEstabelecimentos(result))\n        getFavoritos((result: Array<number>) => setFavorites(result))\n    }, [])\n\n    return <div>\n        {estabelecimentos\n            .filter(estabelecimento => favorites.indexOf(estabelecimento.id) > -1)\n            .map(estabelecimento => <div className='col-xs-12 col-md-3'>\n                <CardEstabelecimento estabelecimento={estabelecimento} favorite={favorites.indexOf(estabelecimento.id) > -1} />\n            </div>)}\n    </div>\n}","import React from 'react';\nimport firebase from 'firebase';\n\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './scenes/Home/Home';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Favorites from './scenes/Favorites/Favorites';\n\nfunction App() {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyDDQljAKKIMXFmHN96hJl9FAP3-rCEYfc4\",\n    authDomain: \"meudelivery-p.firebaseapp.com\",\n    databaseURL: \"https://meudelivery-p.firebaseio.com\",\n    projectId: \"meudelivery-p\",\n    storageBucket: \"meudelivery-p.appspot.com\",\n    messagingSenderId: \"739052945087\",\n    appId: \"1:739052945087:web:1d7cc071fc738822a4d00a\",\n    measurementId: \"G-BXW0K884BJ\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  firebase.auth()\n    .signInAnonymously()\n    .catch(err => console.error(err))\n\n  firebase.auth().onAuthStateChanged(function(user) {\n    if (user) {\n      if(user.isAnonymous) {\n        localStorage.setItem('USER_ID', user.uid);\n      }\n    } else {\n    }\n  });\n\n  return (\n    <Router>\n      <Navbar />\n      <Sidebar />\n\n      <section className=\"content\">\n        <div className=\"container-fluid\">\n          <Switch>\n            <Route path=\"/\" exact><Home /></Route>\n            <Route path=\"/favoritos\"><Favorites /></Route>\n          </Switch>\n        </div>\n      </section>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}